// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Complex test for PropTypes 1`] = `
"{
  foo: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number,
    PropTypes.bool,
    PropTypes.arrayOf(
      PropTypes.oneOfType([PropTypes.number, PropTypes.string])
    ),
    PropTypes.func,
    PropTypes.shape({
      mandatory: PropTypes.bool.isRequired,
      bar: PropTypes.string,
      hello: PropTypes.string
    })
  ]),
  bax: PropTypes.arrayOf(PropTypes.string),
  bar: PropTypes.array,
  mixed: PropTypes.arrayOf(
    PropTypes.oneOfType([PropTypes.number, PropTypes.string])
  ),
  empty: PropTypes.object
}"
`;

exports[`Complex test for TypeScript 1`] = `
"{
  foo?:
    | null
    | string
    | number
    | boolean
    | Array<number | string>
    | { (): any }
    | {
        mandatory: boolean,
        bar?: string,
        hello?: string
      },
  bax?: Array<string>,
  bar?: Array<any>,
  mixed?: Array<number | string>,
  empty?: {}
}"
`;

exports[`Complex test for TypeScript 2`] = `
"type ProjectNameFoo = {
  mandatory: boolean,
  bar?: string,
  hello?: string
}

type ProjectNameEmpty = {}

type ProjectName = {
  foo?:
    | null
    | string
    | number
    | boolean
    | Array<number | string>
    | { (): any }
    | ProjectNameFoo,
  bax?: Array<string>,
  bar?: Array<any>,
  mixed?: Array<number | string>,
  empty?: ProjectNameEmpty
}
"
`;

exports[`Complex test for Vue.js validation 1`] = `
"{
  foo: [String, Number, Boolean, Array, Function, Object],
  bax: Array,
  bar: Array,
  mixed: Array,
  empty: Object
}"
`;

exports[`Empty object for PropTypes 1`] = `""`;

exports[`Named types 1`] = `
"type ProjectNamePayloadIssue = {
  title: string
}

type ProjectNamePayload = {
  issue: ProjectNamePayloadIssue
}

type ProjectName = {
  payload: ProjectNamePayload
}
"
`;

exports[`Simple test for PropTypes 1`] = `
"{
  \\"first name\\": PropTypes.string.isRequired,
  \\"last name\\": PropTypes.string
}"
`;

exports[`Simple test for TypeScript 1`] = `
"{
  \\"first name\\": string,
  \\"last name\\"?: string
}"
`;

exports[`Simple test for TypeScript 2`] = `
"type ProjectName = {
  \\"first name\\": string,
  \\"last name\\"?: string
}
"
`;

exports[`Simple test for Vue.js validation 1`] = `
"{
  \\"first name\\": { type: String, required: true },
  \\"last name\\": String
}"
`;

exports[`Union types for root definition for TypeScript 1`] = `
"| {
      foo: string
    }
  | Array<string>"
`;

exports[`Union types for root definition for TypeScript 2`] = `
"type ProjectName = {
  foo: string
}

type Root = ProjectName | Array<string>
"
`;
